#
# SXHKD module with BPSWM-specific commands
#
# ~/.config/sxhkd/sxhkdrc_bspc
#
# Other modules should be available at ~/.config/sxhkd/
#

# Description
# ===========
#
# Partial configuration file for the Simple X Hotkey Daemon.  Meant to
# work with `bspwm`.  This is part of my dotfiles, which are managed
# with GNU Stow.  See https://gitlab.com/protesilaos/dotfiles
#
# Last full review on 2019-06-04



# Close {or kill} currently focused node
super + {_,shift + }q
	bspc node -{c,k}

# Focus/swap nodes/desktops
# -------------------------

# Focus {or swap} the node in the given direction.
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# Focus {or send focused node to} the given desktop.
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

# Send and follow focused node to given desktop.
super + ctrl + shift + {1-9}
	id=$(bspc query -N -n); bspc node -d ^{1-9}; bspc node -f ${id}

# With `alt` focus {next,previous} window in the current desktop.  With
# `super` focus {next,previous} desktop in the current monitor.
# Cyclical behaviour.  Move in the opposite direction while also holding
# down `shift`.
{super,alt} + {_,shift +} Tab
	bspc {desktop,node} -f {next,prev}.local

# Expand or contract node in the given direction.
#
# For floating windows one can use Alt + Right Mouse click to
# drag/resize in the given direction (this works in other DEs as well,
# such as MATE and Xfce).  I have not set the script to resize floating
# windows because: (i) I do not use them and if I do I do not want to
# change their dimensions, and (ii) to keep the script concise.
super + ctrl + {h,j,k,l}
	own_script_bspwm_node_resize {west,south,north,east} 50

# Move a floating window with the arrow keys (else use Alt + Left Mouse
# Click to drag).  I seldom use floating windows.
super + shift + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}

# Swap current window with the biggest one in the present
# desktop.
super + shift + b
	bspc node -s biggest.local

# Preselect the direction or insert again to cancel the preselection.
# This enters the manual tiling mode.
super + alt + {h,j,k,l}
	bspc node --presel-dir '~{west,south,north,east}'

# Preselect the ratio.  The default value is 0.5, defined in `bspwmrc`.
super + alt + {1-9}
	bspc node -o 0.{1-9}

# Send the newest marked node to the newest preselected node
# (see node flags below).  The choice of key binding is meant to mimic
# that of pasting from the clipboard to the terminal.
super + shift + v
	bspc node newest.marked -n newest.!automatic

# Node layout state and flags
# ---------------------------

# Toggle monocle layout (maximise focused node).  If you use `-l
# monocle` you lose the toggle functionality.
super + m
	bspc desktop -l next

# Toggle tiled, pseudo_tiled, floating, fullscreen view.  Tiled is what
# is used by default.  Pseudo-tiled presents the window in its original
# dimensions inside the split it would normally occupy as a tile (I have
# never found a practical use for this).  Floating windows have their
# own dimensions and can be stacked on top of each other.
#
# NOTE the presence of the tilde ~.  If current state matches the given
# state, then the argument is interpreted as the last state.
super + {t,shift + space,space,f}
 	bspc node -t ~{tiled,pseudo_tiled,floating,fullscreen}

# Set the node flags.  Locked is a node that cannot be closed with `bspc
# node --close`.  Marked is a specific selector that allows operating on
# the given item (such as sending the marked item to the newest
# preselection).  Sticky stays in the focused desktop.  Private tries to
# keep its dimensions and tiling position.
super + a ; {l,m,s,p}
	bspc node -g {locked,marked,sticky,private}

# Set the split ratio on demand.  Applies to the next window, or when
# using the next set of commands that equalise the tree or balance the
# parent node.
super + s ; {2,3,4}
	bspc config split_ratio { \
	0.50 && notify-send "BSPWM configuration" "Split ratio set to 0.50", \
	0.66 && notify-send "BSPWM configuration" "Split ratio set to 0.66", \
	0.75 && notify-send "BSPWM configuration" "Split ratio set to 0.75" \
	}

# Make node split ratios equal or balanced.  The former applies to the
# root of the tree to equalise all split ratios.  The latter applies to
# the parent node to even out manually-split windows.
super + s ; {e,b}
	bspc node {@/ --equalize,@parent --balance}

# Manipulate the workspace
# ------------------------

# Rotate all windows {counter-}clockwise by 90 degrees.
super + {_,shift + }r
	bspc node @/ --rotate {90,-90}

# Flip desktop: what is on the right/top moves to the left/bottom and
# vice versa.
super + alt + {_,shift + }r
	bspc node @/ --rotate {180,-180}

# Switch between gap presets.
super + shift + {y,u,i,o}
	bspc config window_gap {0,5,10,20}

# Dynamic gaps.
super + shift + bracket{left,right}
	bspc config -d focused window_gap "$(($(bspc config -d focused window_gap) {-,+} 5 ))"



# Continuous input mode
# =====================
# EXPLAIN: The following key chords have a colon sign `:' before their
# last part.  By pressing the keys to the left of the colon, you can
# then pass the commands by only using the keys to the right of the
# colon.  This eliminates the need for repeated chord presses that
# involve the modifier keys.  Exit the mode with "Escape".
#
# NOTE: All of the following are mirrors of their afore-mentioned
# couterparts.

# Focus {or swap with node} in the given direction.
super + c : {_,shift + } {h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# Gaps presets.
super + c : {y,u,i,o}
	bspc config window_gap {0,5,10,20}

# Mode for dynamic gaps.
super + c : bracket{left,right}
	bspc config -d focused window_gap "$(($(bspc config -d focused window_gap) {-,+} 5 ))"

# Move floating windows with the arrow keys
super + c : {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}
