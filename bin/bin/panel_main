#!/bin/bash

# XXX 2021-08-27: work-in-progress

command -v lemonbar > /dev/null || { echo "Missing dependency: lemonbar"; exit 1; }
command -v panel_theme > /dev/null || { echo "Missing dependency: panel_theme"; exit 1; }

fifo='/tmp/panel_main.fifo'
panel_height=22
fontmain='Monospace:style=regular:size=9'
fontbold='Monospace:style=bold:size=9'

. panel_theme

# TODO 2021-08-27: How to combine multiple modules, each of which prints
# to its own named pipe?  Wrapping `panel_bspwm' and `panel_volume -S'
# into a single function and then feeding that to `lemonbar' only shows
# one module at a time.  So we need them to be on the same line somehow.

# TODO 2021-08-27: Check whether the above assumption is correct.  Maybe
# there is something we are missing in such a design.


# _make_pipe()
# {
#     if [ -p "$fifo" ]
#     then
#         return 0
#     else
#         mkfifo "$fifo" 2> /dev/null
#     fi
# }

_bspwm()
{
    panel_bspwm
}

_volume()
{
    panel_volume -S
}


# The bar style to-be-used:

     # | lemonbar -b -u 1 -p -g "x${panel_height}" \
     #            -F "$fg_main" -B "#ff${bg_main:1}" \
     #            -f "$fontmain" -f "$fontbold" -n "Panel" &



