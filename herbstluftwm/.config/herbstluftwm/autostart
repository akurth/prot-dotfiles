#!/bin/bash

# hlwm autostart --- Initialisation script for HerbstluftWM
#
# Copyright (c) 2021-2023  Protesilaos Stavrou <info@protesilaos.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
## Commentary:
#
# This file is part of my custom desktop session:
# <https://git.sr.ht/~protesilaos/dotfiles>.

## Code:

### Essentials

_hc ()
{
    herbstclient "$@"
}

_check ()
{
    command -v "$1" > /dev/null
}

_hc emit_hook reload

# Remove all existing keybindings.  We set them further below via
# SXHKD.  The only exception is the mouse where we want Super+Right
# Click drag to move a floating window and Super+Left Click drag to
# resize any window at its nearest side.
_hc keyunbind --all
_hc mousebind Mod4-Button1 move
_hc mousebind Mod4-Button3 resize

### Tags and monitors

# unlock, just to be sure
_hc unlock

# NOTE that tags must be defined before the monitors.

tag_names=( {0..9} )

_hc rename default "${tag_names[0]}" || true

for i in "${!tag_names[@]}"
do
    _hc add "${tag_names[$i]}"
done

# Set up virtual monitors.  The monitor's resolution is 2560x1080 (and
# what inspired me to set up HerbstluftWM).  Also check my script
# 'herbstluftwm_cycle_monitors'.
_hc set_monitors 640x1080+0+0 1920x1080+640+0

### Configuration

_hc set auto_detect_panels on

_hc set window_gap 0
_hc set frame_gap 0
_hc set frame_border_width 0
_hc set frame_padding 0
_hc set smart_window_surroundings off
_hc set smart_frame_surroundings off
_hc set mouse_recenter_gap 0
_hc set focus_follows_mouse on
_hc set always_show_frame on
_hc set frame_bg_transparent off
_hc set frame_normal_opacity 25
_hc set frame_active_opacity 100
_hc set default_frame_layout vertical

_hc attr theme.inner_width 1
_hc attr theme.border_width 3
_hc attr theme.active.outer_width 3
_hc attr theme.floating.border_width 1
_hc attr theme.floating.outer_width 1

#### Frame title
_hc attr theme.title_height 12
_hc attr theme.title_depth 3
_hc attr theme.title_font "Monospace:size=8:weight=bold" # see my fontconfig setup
_hc attr theme.normal.title_font "Monospace:size=8"
_hc attr theme.title_align left
_hc attr theme.title_when multiple_tabs # only with the max layout

#### Colours
_check herbstluftwm_conf_colors && herbstluftwm_conf_colors

#### Rules
# TODO 2021-11-08: I have kept the defaults here.  Needs review.

_hc unrule -F
_hc rule focus=on # normally focus new clients
_hc rule floatplacement=none
_hc rule fixedsize floating=on
_hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
_hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on floatplacement=center
_hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

# Empty frames function as the equivalent of BSPWM's receptacles: they
# receive the next client.  However, this only works for the focused
# tag.
_hc rule index=e

### Autostart

# Specify keyboard layout.  For the key chord that performs the layout
# switching between US QWERTY and Greek refer to my `sxhkdrc`.
#
# Originally found the options in this location (was on Debian Buster
# circa 2019 and confirmed with Arch Linux on 2021-11-08):
# /usr/share/X11/xkb/rules/base.lst
#
# caps:hyper           Make Caps Lock an additional Hyper
# compose:menu         Menu key behaves as Compose
#
# The options are required in order for Xmodmap to work properly (see
# below).
if _check setxkbmap
then
    setxkbmap -layout 'us,el' -option 'ctrl:nocaps,compose:menu'
fi

# Parse my custom key mappings.  These make Caps behave as another Ctrl
# key.  We need to evaluate this first otherwise it might mess up with
# SXHKD.
[ -f "$HOME"/.Xmodmap ] && xmodmap "$HOME"/.Xmodmap

# The hotkey daemon that handles all custom key bindings.  I split the
# key chords into separate files, based on their scope.  The ones that
# pertain to the window manager are defined in sxhkdrc_herbstclient.
_check sxhkd && sxhkd -c "$HOME"/.config/sxhkd/sxhkdrc{,_herbstclient} &

# Launch Polybar
if _check polybar
then
    # Make sure we have no running instances
    pkill -x polybar

    polybar herbstluftwm &
fi

# Run the tool that sets the wallpaper.  A program could be used that
# handles the desktop in general, including the option to set icons.
# But this is enough for my case.  Here is a command I tested and which
# works (using the Xfce desktop manager):
# xfdesktop --sm-client-disable --disable-wm-check &
if _check feh
then
    if [ -f "$HOME"/.fehbg ]
    then
        "$HOME"/.fehbg &
    fi
fi

## NOTE 2023-01-19: I added the `--backend glx`.  Maybe this is
## better?  I will see it in action when I get the chance.
#
# FIXME 2021-12-05: It create artifacts while streaming/recording
# video whenever I scroll in Emacs.

# Start the display compositor.  See `picom --help'.
_check picom && picom --config /dev/null -r 3 -o 0.55 -l -2 -t -2 \
                      -I 0.075 -O 0.075 -D 8 -f -i 1.0 -e 1.0 \
                      --detect-transient --detect-client-leader --vsync \
                      --backend glx --glx-no-stencil --glx-no-rebind-pixmap &

# Simple daemon for GTK settings
_check xsettingsd && xsettingsd -c "$HOME"/.config/xsettingsd/xsettingsd.conf &

# Use the same cursor everywhere
_check xsetroot && xsetroot -xcf /usr/share/icons/Adwaita/cursors/left_ptr 16

# Load my Xresources
_check xrdb && [ -f "$HOME"/.Xresources ] && xrdb -I "$HOME" -merge "$HOME"/.Xresources
