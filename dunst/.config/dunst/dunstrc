# vi: ft=cfg
#
# dunst configuration file.  Part of my dotfiles:
# https://gitlab.com/protesilaos/dotfiles
#
# NOTE default configuration file on Debian is available at:
# /usr/share/doc/dunst/dunstrc.gz
# This files preserves some of the original comments, but removes parts
# that are considered surplus to my requirements.

[global]
font = "sans 10"
frame_width = 2
frame_color = "#312e30"

# Possible values are:
# full: Allow a small subset of html markup in notifications:
#        <b>bold</b>
#        <i>italic</i>
#        <s>strikethrough</s>
#        <u>underline</u>
#
#        For a complete reference see
#        <http://developer.gnome.org/pango/stable/PangoMarkupFormat.html>.
#
# strip: This setting is provided for compatibility with some broken
#        clients that send markup even though it's not enabled on the
#        server. Dunst will try to strip the markup but the parsing is
#        simplistic so using this option outside of matching rules for
#        specific applications *IS GREATLY DISCOURAGED*.
#
# no:    Disable markup parsing, incoming notifications will be treated as
#        plain text. Dunst will not advertise that it has the body-markup
#        capability if this is set as a global setting.
#
# It's important to note that markup inside the format option will be parsed
# regardless of what this is set to.
markup = full

# The format of the message.  Possible variables are:
#   %a  appname
#   %s  summary
#   %b  body
#   %i  iconname (including its path)
#   %I  iconname (without its path)
#   %p  progress value if set ([  0%] to [100%]) or nothing
# Markup is allowed

format = "<b>%s</b>\n%b"

# Sort messages by urgency.
sort = yes

# Show how many messages are currently hidden (because of geometry).
indicate_hidden = yes

# Alignment of message text.
# Possible values are "left", "center" and "right".
alignment = left

# The frequency with wich text that is longer than the notification
# window allows bounces back and forth.
# This option conflicts with "word_wrap".
# Set to 0 to disable.
bounce_freq = 0

# Show age of message if message is older than show_age_threshold
# seconds.
# Set to -1 to disable.
show_age_threshold = 120

# Split notifications into multiple lines if they don't fit into
# geometry.
word_wrap = yes

# Ignore newlines '\n' in notifications.
ignore_newline = no

# Merge multiple notifications with the same content
stack_duplicates = true

# Hide the count of merged notifications with the same content
hide_duplicate_count = false

# The geometry of the window:
#   [{width}]x{height}[+/-{x}+/-{y}]
# The geometry of the message window.
# The height is measured in number of notifications everything else
# in pixels.  If the width is omitted but the height is given
# ("-geometry x2"), the message window expands over the whole screen
# (dmenu-like).  If width is 0, the window expands to the longest
# message displayed.  A positive x is measured from the left, a
# negative from the right side of the screen.  Y is measured from
# the top and down respectevly.
# The width can be negative.  In this case the actual width is the
# screen width minus the width defined in within the geometry option.

# NOTE after reading the above, follow this if you want to center on
# screen:
# {( monitor width / 2 ) - ( notification width / 2)}
geometry = "300x4-3+3"

# Shrink window if it's smaller than the width.  Will be ignored if
# width is 0.
shrink = no

# The transparency of the window.  Range: [0; 100].
# This option will only work if a compositing windowmanager is
# present (e.g. xcompmgr, compiz, etc.).
transparency = 0

# Don't remove messages, if the user is idle (no mouse or keyboard input)
# for longer than idle_threshold seconds.
# Set to 0 to disable.
idle_threshold = 120

# Which monitor should the notifications be displayed on.
monitor = 0

# Display notification on focused monitor.  Possible modes are:
#   mouse: follow mouse pointer
#   keyboard: follow window with keyboard focus
#   none: don't follow anything
# 
# "keyboard" needs a windowmanager that exports the
# _NET_ACTIVE_WINDOW property.
# This should be the case for almost all modern windowmanagers.
# 
# If this option is set to mouse or keyboard, the monitor option
# will be ignored.
follow = keyboard

# Should a notification popped up from history be sticky or timeout
# as if it would normally do.
sticky_history = yes

# Maximum amount of notifications kept in history
history_length = 20

# Display indicators for URLs (U) and actions (A).
show_indicators = yes

# The height of a single line.  If the height is smaller than the
# font height, it will get raised to the font height.
# This adds empty space above and under the text.
line_height = 0

# Draw a line of "separatpr_height" pixel height between two
# notifications.
# Set to 0 to disable.
separator_height = 2

# Padding between text and separator.
padding = 8

# Horizontal padding.
horizontal_padding = 10

# Define a color for the separator.
# possible values are:
#  * auto: dunst tries to find a color fitting to the background;
#  * foreground: use the same color as the foreground;
#  * frame: use the same color as the frame;
#  * anything else will be interpreted as a X color.
separator_color = "#2a2829"

# Print a notification on startup.
# This is mainly for error detection, since dbus (re-)starts dunst
# automatically after a crash.
startup_notification = false

# dmenu path.
dmenu = /usr/bin/dmenu -p dunst:

# Browser for opening urls in context menu.
browser = /usr/bin/xdg-open

# Align icons left/right/off
icon_position = left

# Max size for icons that are larger that the default ones.  This is
# good to show the album cover of songs when mpd is running (with
# mpDris2).
max_icon_size = 48

# Paths to default icons.
icon_path = /usr/share/icons/Papirus/32x32/apps:/usr/share/icons/Papirus/32x32/devices:/usr/share/icons/Papirus/32x32/mimetypes:/usr/share/icons/Papirus/32x32/places:/usr/share/icons/Papirus/32x32/status

# Define the title of the windows spawned by dunst
title = Dunst

# Define the class of the windows spawned by dunst
class = Dunst

[shortcuts]
# Shortcuts are specified as [modifier+][modifier+]...key
# Available modifiers are "ctrl", "mod1" (the alt-key), "mod2",
# "mod3" and "mod4" (windows-key).
# Xev might be helpful to find names for keys.

# Close notification.
close = mod4+c

# Close all notifications.
close_all = mod4+shift+c

# Redisplay last message(s).
history = mod4+v

# Context menu.
context = mod4+shift+v

# IMPORTANT: colors have to be defined in quotation marks.
# Otherwise the "#" and following would be interpreted as a comment.
[urgency_low]
background = "#312e30"
foreground = "#949d9f"
timeout = 6

[urgency_normal]
background = "#232323"
foreground = "#aeadaf"
timeout = 8

[urgency_critical]
background = "#d2813d"
foreground = "#232323"
timeout = 12
